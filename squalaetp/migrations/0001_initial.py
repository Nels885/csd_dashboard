# Generated by Django 3.2.16 on 2023-02-08 13:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import squalaetp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('psa', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_model', models.CharField(max_length=50, unique=True, verbose_name='modèle produit')),
                ('category', models.CharField(choices=[('PSA', 'Produits PSA'), ('AUTRE', 'Autres produits'), ('CLARION', 'Clarion'), ('ETUDE', 'Etude'), ('CALCULATEUR', 'Calculateurs'), ('DEFAUT', 'Defaut')], default='DEFAUT', max_length=50, verbose_name='catégorie')),
                ('corvet_type', models.CharField(blank=True, choices=[('RAD', 'Radio'), ('NAV', 'Navigation'), ('BSI', 'Boitier Servitude Intelligent'), ('BSM', 'Boitier Servitude Moteur'), ('CMB', 'Combine Planche de Bord'), ('CMM', 'Calculateur Moteur Multifonction'), ('EMF', 'Ecran Multifonctions'), ('FMUX', 'Façade Multiplexée'), ('HDC', 'Haut de Colonne de Direction (COM200x)'), ('MDS', 'Module de service telematique'), ('CVM2', 'Camera Video Multifonction V2')], max_length=50, verbose_name='Type Corvet')),
                ('animator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='animator_prods', to=settings.AUTH_USER_MODEL)),
                ('fa_users', models.ManyToManyField(blank=True, related_name='fa_prods', to=settings.AUTH_USER_MODEL)),
                ('fe_users', models.ManyToManyField(blank=True, related_name='fe_prods', to=settings.AUTH_USER_MODEL)),
                ('niv_i_users', models.ManyToManyField(blank=True, related_name='niv_i_prods', to=settings.AUTH_USER_MODEL)),
                ('niv_l_users', models.ManyToManyField(blank=True, related_name='niv_l_prods', to=settings.AUTH_USER_MODEL)),
                ('niv_o_users', models.ManyToManyField(blank=True, related_name='niv_o_prods', to=settings.AUTH_USER_MODEL)),
                ('niv_t_users', models.ManyToManyField(blank=True, related_name='niv_t_prods', to=settings.AUTH_USER_MODEL)),
                ('niv_u_users', models.ManyToManyField(blank=True, related_name='niv_u_prods', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Catégorie Produit',
                'ordering': ['product_model'],
            },
        ),
        migrations.CreateModel(
            name='ProductCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='code Produit')),
                ('ecus', models.ManyToManyField(blank=True, related_name='parts', to='psa.Ecu')),
                ('medias', models.ManyToManyField(blank=True, related_name='parts', to='psa.Multimedia')),
            ],
        ),
        migrations.CreateModel(
            name='XelonTemporary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_de_dossier', models.CharField(max_length=10, verbose_name='numéro de dossier')),
                ('vin', models.CharField(max_length=17, verbose_name='V.I.N.')),
                ('modele_produit', models.CharField(blank=True, max_length=50, verbose_name='modèle produit')),
                ('modele_vehicule', models.CharField(blank=True, max_length=50, verbose_name='modèle véhicule')),
                ('is_active', models.BooleanField(default=False, verbose_name='Actif')),
                ('end_date', models.DateField(blank=True, default=squalaetp.models.get_deadline, null=True, verbose_name='date de fin')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('corvet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='psa.corvet')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Xelon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_de_dossier', models.CharField(max_length=10, unique=True, verbose_name='numéro de dossier')),
                ('vin', models.CharField(blank=True, max_length=17, verbose_name='V.I.N.')),
                ('modele_produit', models.CharField(blank=True, max_length=50, verbose_name='modèle produit')),
                ('modele_vehicule', models.CharField(blank=True, max_length=50, verbose_name='modèle véhicule')),
                ('famille_client', models.CharField(blank=True, max_length=5000, verbose_name='famille Client')),
                ('famille_produit', models.CharField(blank=True, max_length=100, verbose_name='famille produit')),
                ('date_retour', models.DateField(blank=True, null=True, verbose_name='date retour')),
                ('delai_au_en_jours_ouvres', models.IntegerField(blank=True, null=True, verbose_name='délai en jours ouvrés')),
                ('delai_au_en_jours_calendaires', models.IntegerField(blank=True, null=True, verbose_name='délai en jours calendaires')),
                ('date_de_cloture', models.DateTimeField(blank=True, null=True, verbose_name='date de clôture')),
                ('type_de_cloture', models.CharField(blank=True, max_length=50, verbose_name='type de clôture')),
                ('lieu_de_stockage', models.CharField(blank=True, max_length=50, verbose_name='lieu de stockage')),
                ('code_magasin', models.CharField(blank=True, max_length=50, verbose_name='Code Magasin')),
                ('code_zone', models.CharField(blank=True, max_length=50, verbose_name='Code Zone')),
                ('nom_technicien', models.CharField(blank=True, max_length=50, verbose_name='nom technicien')),
                ('commentaire_sav_admin', models.CharField(blank=True, max_length=5000, verbose_name='commentaire SAV Admin')),
                ('commentaire_de_la_fr', models.CharField(blank=True, max_length=5000, verbose_name='commentaire de la FR')),
                ('commentaire_action', models.CharField(blank=True, max_length=5000, verbose_name='commentaire action')),
                ('libelle_de_la_fiche_cas', models.CharField(blank=True, max_length=5000, verbose_name='libellé de la fiche cas')),
                ('dossier_vip', models.BooleanField(default=False, verbose_name='dossier VIP')),
                ('express', models.BooleanField(default=False, verbose_name='express')),
                ('ilot', models.CharField(blank=True, max_length=100, verbose_name='ilot')),
                ('date_expedition_attendue', models.DateField(blank=True, null=True, verbose_name='date expédition attendue')),
                ('delai_expedition_attendue', models.IntegerField(blank=True, null=True, verbose_name='délai expédition attendue')),
                ('rm', models.CharField(blank=True, max_length=50, verbose_name='RM')),
                ('pays', models.CharField(blank=True, max_length=100, verbose_name='Pays')),
                ('telecodage', models.CharField(blank=True, max_length=50, verbose_name='TELECODAGE')),
                ('appairage', models.CharField(blank=True, max_length=50, verbose_name='APPAIRAGE')),
                ('vin_error', models.BooleanField(default=False, verbose_name='Erreur VIN')),
                ('is_active', models.BooleanField(default=False, verbose_name='Actif')),
                ('corvet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='psa.corvet')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='squalaetp.productcategory')),
            ],
            options={
                'verbose_name': 'dossier Xelon',
                'ordering': ['numero_de_dossier'],
                'permissions': [('change_product', 'Can change product'), ('email_product', 'Can send email product'), ('change_vin', 'Can change vin'), ('email_vin', 'Can send email vin'), ('email_admin', 'Can send email admin'), ('active_xelon', 'Can active xelon')],
            },
        ),
        migrations.CreateModel(
            name='SparePart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_magasin', models.CharField(blank=True, max_length=50, verbose_name='code Magasin')),
                ('code_zone', models.CharField(blank=True, max_length=50, verbose_name='code Zone')),
                ('code_site', models.IntegerField(blank=True, null=True, verbose_name='code Site')),
                ('code_emplacement', models.CharField(blank=True, max_length=50, verbose_name='code Emplacement')),
                ('cumul_dispo', models.IntegerField(blank=True, null=True, verbose_name='cumul Dispo')),
                ('code_produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='squalaetp.productcode')),
            ],
        ),
        migrations.CreateModel(
            name='Sivin',
            fields=[
                ('immat_siv', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='Immatriculation SIV')),
                ('codif_vin', models.CharField(max_length=17, verbose_name='V.I.N.')),
                ('type_vin_cg', models.CharField(blank=True, max_length=6, verbose_name='Type VIN C.G. (VDS)')),
                ('type_var_vers_prf', models.CharField(blank=True, max_length=100, verbose_name='Type var vers prf')),
                ('n_serie', models.CharField(blank=True, max_length=8, verbose_name='Numéro de série (VIS)')),
                ('n_siren', models.CharField(blank=True, max_length=100, verbose_name='Numéro Siren')),
                ('date_1er_cir', models.CharField(blank=True, max_length=100, verbose_name='Date 1ère circulation')),
                ('date_dcg', models.CharField(blank=True, max_length=100, verbose_name='Date C.G.')),
                ('marque', models.CharField(blank=True, max_length=100, verbose_name='Marque')),
                ('marque_carros', models.CharField(blank=True, max_length=100, verbose_name='Marque carrosserie')),
                ('modele', models.CharField(blank=True, max_length=100, verbose_name='Modèle')),
                ('modele_etude', models.CharField(blank=True, max_length=100, verbose_name='Modèle étude')),
                ('modele_prf', models.CharField(blank=True, max_length=100, verbose_name='Modèle préférence')),
                ('genre_v', models.CharField(blank=True, max_length=100, verbose_name='Genre véhicule')),
                ('genre_vcg', models.CharField(blank=True, max_length=100, verbose_name='Genre véhicule C.G.')),
                ('nb_portes', models.CharField(blank=True, max_length=100, verbose_name='Nombre portes')),
                ('nb_pl_ass', models.CharField(blank=True, max_length=100, verbose_name='Nombre de places assises')),
                ('version', models.CharField(blank=True, max_length=100, verbose_name='Version')),
                ('energie', models.CharField(blank=True, max_length=100, verbose_name='Energie')),
                ('puis_ch', models.CharField(blank=True, max_length=100, verbose_name='Puissance chevau')),
                ('puis_fisc', models.CharField(blank=True, max_length=100, verbose_name='Puissance fiscale')),
                ('puis_kw', models.CharField(blank=True, max_length=100, verbose_name='Puissance Kw')),
                ('cons_exurb', models.CharField(blank=True, max_length=100, verbose_name='Consommation hors agglomération')),
                ('cons_mixte', models.CharField(blank=True, max_length=100, verbose_name='Consommation mixte')),
                ('cons_urb', models.CharField(blank=True, max_length=100, verbose_name='Consommation agglomération')),
                ('carrosserie', models.CharField(blank=True, max_length=100, verbose_name='Carrosserie')),
                ('carrosserie_cg', models.CharField(blank=True, max_length=100, verbose_name='Carrosserie C.G.')),
                ('couleur_vehic', models.CharField(blank=True, max_length=100, verbose_name='Couleur véhicule')),
                ('empat', models.CharField(blank=True, max_length=100, verbose_name='Empattement véhicule')),
                ('hauteur', models.CharField(blank=True, max_length=100, verbose_name='Hauteur')),
                ('largeur', models.CharField(blank=True, max_length=100, verbose_name='Largeur')),
                ('longueur', models.CharField(blank=True, max_length=100, verbose_name='Longueur')),
                ('latitude', models.CharField(blank=True, max_length=100, verbose_name='Latitude')),
                ('poids_vide', models.CharField(blank=True, max_length=100, verbose_name='Poids à vide')),
                ('ptr', models.CharField(blank=True, max_length=100, verbose_name='PTR')),
                ('ptr_prf', models.CharField(blank=True, max_length=100, verbose_name='PTR Prf')),
                ('pneus', models.CharField(blank=True, max_length=100, verbose_name='Pneus')),
                ('code_moteur', models.CharField(blank=True, max_length=100, verbose_name='Code moteur')),
                ('mode_inject', models.CharField(blank=True, max_length=100, verbose_name="Mode d'injection")),
                ('cylindree', models.CharField(blank=True, max_length=100, verbose_name='Cylindrée')),
                ('nb_cylind', models.CharField(blank=True, max_length=100, verbose_name='Nombre cylindres')),
                ('nb_soupape', models.CharField(blank=True, max_length=100, verbose_name='Nombre soupapes')),
                ('turbo_compr', models.CharField(blank=True, max_length=100, verbose_name='Turbo compresseur')),
                ('co2', models.CharField(blank=True, max_length=100, verbose_name='Emission CO2')),
                ('depollution', models.CharField(blank=True, max_length=100, verbose_name='Dépollution')),
                ('tp_boit_vit', models.CharField(blank=True, max_length=100, verbose_name='Type de boîte de vitesse')),
                ('nb_vitesse', models.CharField(blank=True, max_length=100, verbose_name='Nombre de vitesses')),
                ('nb_volume', models.CharField(blank=True, max_length=100, verbose_name='Nombre de volume')),
                ('propulsion', models.CharField(blank=True, max_length=100, verbose_name='Type propulsion')),
                ('type', models.CharField(blank=True, max_length=100, verbose_name='Type')),
                ('prix_vehic', models.CharField(blank=True, max_length=100, verbose_name='Prix véhicule')),
                ('corvet', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='psa.corvet')),
            ],
            options={
                'verbose_name': 'Données SIVIN',
                'ordering': ['immat_siv'],
            },
        ),
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True, verbose_name='Date du jours')),
                ('products_to_repair', models.IntegerField(verbose_name='Produits à réparer')),
                ('late_products', models.IntegerField(verbose_name='Produits en retard')),
                ('express_products', models.IntegerField(verbose_name='Produits express')),
                ('output_products', models.IntegerField(verbose_name='Produits en sortie')),
                ('xelons', models.ManyToManyField(to='squalaetp.Xelon')),
            ],
        ),
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='modifié le')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='action_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Modification',
                'ordering': ['-modified_at'],
            },
        ),
    ]
